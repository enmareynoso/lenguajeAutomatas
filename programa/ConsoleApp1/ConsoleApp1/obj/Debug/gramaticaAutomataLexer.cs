//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Kerlyn\source\repos\ConsoleApp1\ConsoleApp1\gramaticaAutomata.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ConsoleApp1 {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class gramaticaAutomataLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, TipoAutomata=12, ID=13, DIGITO=14, WS=15;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "TipoAutomata", "ID", "DIGITO", "WS"
	};


	public gramaticaAutomataLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'Automata:'", "'Tipo:'", "'Inicio:'", "'Aceptacion:'", "'{'", "'}'", 
		"'Transiciones:'", "'->'", "':'", "'vacio'", "','"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		"TipoAutomata", "ID", "DIGITO", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "gramaticaAutomata.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x11\x91\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2"+
		"\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3"+
		"\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5"+
		"\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b"+
		"\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\n\x3\n\x3\v"+
		"\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r"+
		"\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r"+
		"\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x5\r\x80\n\r\x3\xE\x3\xE\a\xE\x84\n\xE"+
		"\f\xE\xE\xE\x87\v\xE\x3\xF\x3\xF\x3\x10\x6\x10\x8C\n\x10\r\x10\xE\x10"+
		"\x8D\x3\x10\x3\x10\x2\x2\x2\x11\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2"+
		"\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2"+
		"\xF\x1D\x2\x10\x1F\x2\x11\x3\x2\x6\x4\x2\x43\\\x63|\x6\x2\x32;\x43\\\x61"+
		"\x61\x63|\x3\x2\x32;\x5\x2\v\f\xF\xF\"\"\x93\x2\x3\x3\x2\x2\x2\x2\x5\x3"+
		"\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2"+
		"\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15"+
		"\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2"+
		"\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x3!\x3\x2\x2\x2\x5+\x3\x2\x2\x2"+
		"\a\x31\x3\x2\x2\x2\t\x39\x3\x2\x2\x2\v\x45\x3\x2\x2\x2\rG\x3\x2\x2\x2"+
		"\xFI\x3\x2\x2\x2\x11W\x3\x2\x2\x2\x13Z\x3\x2\x2\x2\x15\\\x3\x2\x2\x2\x17"+
		"\x62\x3\x2\x2\x2\x19\x7F\x3\x2\x2\x2\x1B\x81\x3\x2\x2\x2\x1D\x88\x3\x2"+
		"\x2\x2\x1F\x8B\x3\x2\x2\x2!\"\a\x43\x2\x2\"#\aw\x2\x2#$\av\x2\x2$%\aq"+
		"\x2\x2%&\ao\x2\x2&\'\a\x63\x2\x2\'(\av\x2\x2()\a\x63\x2\x2)*\a<\x2\x2"+
		"*\x4\x3\x2\x2\x2+,\aV\x2\x2,-\ak\x2\x2-.\ar\x2\x2./\aq\x2\x2/\x30\a<\x2"+
		"\x2\x30\x6\x3\x2\x2\x2\x31\x32\aK\x2\x2\x32\x33\ap\x2\x2\x33\x34\ak\x2"+
		"\x2\x34\x35\a\x65\x2\x2\x35\x36\ak\x2\x2\x36\x37\aq\x2\x2\x37\x38\a<\x2"+
		"\x2\x38\b\x3\x2\x2\x2\x39:\a\x43\x2\x2:;\a\x65\x2\x2;<\ag\x2\x2<=\ar\x2"+
		"\x2=>\av\x2\x2>?\a\x63\x2\x2?@\a\x65\x2\x2@\x41\ak\x2\x2\x41\x42\aq\x2"+
		"\x2\x42\x43\ap\x2\x2\x43\x44\a<\x2\x2\x44\n\x3\x2\x2\x2\x45\x46\a}\x2"+
		"\x2\x46\f\x3\x2\x2\x2GH\a\x7F\x2\x2H\xE\x3\x2\x2\x2IJ\aV\x2\x2JK\at\x2"+
		"\x2KL\a\x63\x2\x2LM\ap\x2\x2MN\au\x2\x2NO\ak\x2\x2OP\a\x65\x2\x2PQ\ak"+
		"\x2\x2QR\aq\x2\x2RS\ap\x2\x2ST\ag\x2\x2TU\au\x2\x2UV\a<\x2\x2V\x10\x3"+
		"\x2\x2\x2WX\a/\x2\x2XY\a@\x2\x2Y\x12\x3\x2\x2\x2Z[\a<\x2\x2[\x14\x3\x2"+
		"\x2\x2\\]\ax\x2\x2]^\a\x63\x2\x2^_\a\x65\x2\x2_`\ak\x2\x2`\x61\aq\x2\x2"+
		"\x61\x16\x3\x2\x2\x2\x62\x63\a.\x2\x2\x63\x18\x3\x2\x2\x2\x64\x65\a\x66"+
		"\x2\x2\x65\x66\ag\x2\x2\x66g\av\x2\x2gh\ag\x2\x2hi\at\x2\x2ij\ao\x2\x2"+
		"jk\ak\x2\x2kl\ap\x2\x2lm\ak\x2\x2mn\au\x2\x2no\av\x2\x2o\x80\a\x63\x2"+
		"\x2pq\ap\x2\x2qr\aq\x2\x2rs\a\x61\x2\x2st\a\x66\x2\x2tu\ag\x2\x2uv\av"+
		"\x2\x2vw\ag\x2\x2wx\at\x2\x2xy\ao\x2\x2yz\ak\x2\x2z{\ap\x2\x2{|\ak\x2"+
		"\x2|}\au\x2\x2}~\av\x2\x2~\x80\a\x63\x2\x2\x7F\x64\x3\x2\x2\x2\x7Fp\x3"+
		"\x2\x2\x2\x80\x1A\x3\x2\x2\x2\x81\x85\t\x2\x2\x2\x82\x84\t\x3\x2\x2\x83"+
		"\x82\x3\x2\x2\x2\x84\x87\x3\x2\x2\x2\x85\x83\x3\x2\x2\x2\x85\x86\x3\x2"+
		"\x2\x2\x86\x1C\x3\x2\x2\x2\x87\x85\x3\x2\x2\x2\x88\x89\t\x4\x2\x2\x89"+
		"\x1E\x3\x2\x2\x2\x8A\x8C\t\x5\x2\x2\x8B\x8A\x3\x2\x2\x2\x8C\x8D\x3\x2"+
		"\x2\x2\x8D\x8B\x3\x2\x2\x2\x8D\x8E\x3\x2\x2\x2\x8E\x8F\x3\x2\x2\x2\x8F"+
		"\x90\b\x10\x2\x2\x90 \x3\x2\x2\x2\x6\x2\x7F\x85\x8D\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace ConsoleApp1
